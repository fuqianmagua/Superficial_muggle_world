{
  "hash": "0532cb1666e33d0c7b884a8101cefd7f",
  "result": {
    "engine": "knitr",
    "markdown": "\n---\n\ntitle: \"Econ intro\"\ntoc: true\n\n---\n\n\n\n\n# 1.This is testing to set up margin\n\n## 1. 1 Margin 1: Economic Basic info\n\nOverall picture of economy behavior from may dimensions to observe the chances\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Econ-intro_files/figure-html/load-packages-1.png){width=672}\n:::\n:::\n\n\n## 1.2 Margin 2: Testing margin two for computation\n\n``` {#Test_Comp .r}\n1+2+3\n```\n\n# 2.This is test margin 2\n\n## 2.1 Testing margin 2 insert a pic\n\n![Garden](Garden.JPG){fig-align=\"left\"}\n\n### 2.1.1 Test inside margin to display further\n\nYou'll note that there are some special comments at the top of the code block. These are cell level options that make the figure [cross-referenceable](../authoring/cross-references.qmd).\n\nThis document results in the following rendered output:\n\nYou can produce a wide variety of output types from executable code blocks, including plots, tabular output from data frames, and plain text output (e.g. printing the results of statistical summaries).\n\nThere are many options which control the behavior of code execution and output, you can read more about them in the article on [Execution Options](execution-options.qmd).\n\nIn addition to code blocks which interupt the flow of markdown, you can also include code inline. Read more about inline code in the [Inline Code](inline-code.qmd) article.\n\n#### 2.1.1.1 Test inside margin to display diagram\n\n##### Output Formats {#output-formats}\n\nAnother difference between R Markdown and Quarto is related to output formats. Quarto includes many more built in output formats (and many more options for customizing each format). Quarto also has native features for special project types like [Websites](../websites/), [Books](../books/), and [Blogs](../websites/website-blog.qmd) (rather than relying on external packages).\n\nTo use a format in Quarto you use the `format` key rather than the `output` key as you did in R Markdown. Here's a comparison of equivalent format specifications:\n\n::: {layout-nroW=\"2\"}\n##### R Markdown\n\n``` yaml\ntitle: \"My Document\" output:   html_document:     toc: true     number_sections: true     css: styles.css\n```\n\n###### Quarto\n\n``` yaml\ntitle: \"My Document\" format:   html:     toc: true     number-sections: true     css: styles.css\n```\n:::\n",
    "supporting": [
      "Econ-intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}